events {}
http {
  upstream wtd_client { server wtd-client:5173; }
  upstream wtd_server { server wtd-server:8080; }

  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  server {
    listen 80;
    server_name whatthedoodle.jussinevavuori.com;

    # Serve SPA directly from client container
    location / {
      proxy_pass http://wtd-client:5173;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_redirect off;
    }

    # API to Bun server
    location /api/ {
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

      # trailing slash strips the /api/ prefix
      proxy_pass http://wtd_server/;
    }
  }

  # HTTP: only ACME, otherwise redirect to HTTPS
  # server {
  #   listen 80;
  #   server_name whatthedoodle.jussinevavuori.com;

  #   # ACME challenge
  #   location ^~ /.well-known/acme-challenge/ {
  #     root /var/www/certbot;
  #   }

  #   location / {
  #     return 301 https://$host$request_uri;
  #   }

  #   location = /healthz { return 200 "ok"; }
  # }

  # HTTPS
  server {
    listen 443 ssl http2;
    server_name whatthedoodle.jussinevavuori.com;

    ssl_certificate     /etc/letsencrypt/live/whatthedoodle.jussinevavuori.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/whatthedoodle.jussinevavuori.com/privkey.pem;

    # minimal hardening
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;

    # SPA
    location / {
      proxy_pass http://wtd_client;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_redirect off;
    }

    # API
    location /api/ {
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_pass http://wtd_server/; # trailing slash strips /api/
    }

    location = /healthz { return 200 "ok"; }
  }
}